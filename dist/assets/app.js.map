{"version":3,"sources":["webpack:///app.js","webpack:///webpack/bootstrap 6f116602ec864dd3c799","webpack:///./src/v2c/index.js","webpack:///./src/v2c/helper.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_objectWithoutProperties","obj","keys","target","i","indexOf","Object","prototype","hasOwnProperty","_toConsumableArray","arr","Array","isArray","arr2","length","from","defineProperty","value","draw","drawCanvas","drawImage","drawText","drawRect","runAction","drawContext","undefined","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","push","err","TypeError","_helper","ctx","layers","style","Promise","resolve","reject","layer","shift","then","type","Error","action","r","data","_data$debug","debug","rect","_data$fillStyle","fillStyle","color","_data$strokeStyle","strokeStyle","_data$lineWidth","lineWidth","_data$shadowBlur","shadowBlur","_data$shadowColor","shadowColor","_data$shadowOffsetX","shadowOffsetX","_data$shadowOffsetY","shadowOffsetY","props","save","beginPath","apply","closePath","assign","fillAndStroke","restore","debugLayer","_data$debug2","_data$fillStyle2","_data$strokeStyle2","_data$lineWidth2","_data$textAlign","textAlign","_data$textBaseline","textBaseline","_data$fontVariant","fontVariant","_data$fontStyle","fontStyle","_data$fontWeight","fontWeight","_data$fontSize","fontSize","_data$fontFamily","fontFamily","_data$fontUnit","fontUnit","font","replace","textFillAndStroke","url","_data$debug3","image","Image","addEventListener","load","e","this","removeEventListener","width","height","_rect","x","y","_rect$","w","_rect$2","h","error","setAttribute","canvas","config","arguments","_config$backgroundCol","backgroundColor","_config$fontSize","_config$fontFamily","_config$color","getContext","fillRect","_config$width","_config$height","document","createElement","toDataURL","splitText","_config$fill","fill","_config$stroke","stroke","_config$strokeAhead","strokeAhead","text","newlineManual","split","lines","texts","line","measureText","join","unshift","pop","_config$fill2","_config$stroke2","_config$strokeAhead2","_config$text","_config$multiLine","multiLine","_config$newlineManual","left","top","forEach","index","fillText","strokeText","_config$rect"],"mappings":"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","file":"app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.draw = exports.drawCanvas = exports.drawImage = exports.drawText = exports.drawRect = exports.runAction = exports.drawContext = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _helper = __webpack_require__(1);\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tvar drawContext = exports.drawContext = function drawContext(ctx, layers, style) {\n\t    return new Promise(function (resolve, reject) {\n\t        if (layers.length < 1) {\n\t            resolve();\n\t            return;\n\t        }\n\t        layers = [].concat(_toConsumableArray(layers));\n\t        var layer = layers.shift(),\n\t            promise = null;\n\t        if (Array.isArray(layer)) {\n\t            drawContext(ctx, layer, style).then(function () {\n\t                drawContext(ctx, layers, style).then(resolve, reject);\n\t            }, reject);\n\t        } else {\n\t            switch (layer.type) {\n\t                case 'text':\n\t                    drawText(ctx, layer, style).then(function () {\n\t                        drawContext(ctx, layers, style).then(resolve, reject);\n\t                    }, reject);\n\t                    break;\n\t                case 'image':\n\t                    drawImage(ctx, layer, style).then(function () {\n\t                        drawContext(ctx, layers, style).then(resolve, reject);\n\t                    }, reject);\n\t                    break;\n\t                case 'rect':\n\t                    drawRect(ctx, layer, style).then(function () {\n\t                        drawContext(ctx, layers, style).then(resolve, reject);\n\t                    }, reject);\n\t                    break;\n\t                case 'action':\n\t                    runAction(ctx, layer, style).then(function () {\n\t                        drawContext(ctx, layers, style).then(resolve, reject);\n\t                    }, reject);\n\t                    break;\n\t                default:\n\t                    reject(new Error('Not support layer-type: ' + layer.type));\n\t                    break;\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tvar runAction = exports.runAction = function runAction(ctx, layer) {\n\t    return new Promise(function (resolve, reject) {\n\t        var action = layer.action;\n\t\n\t        var r = action(ctx);\n\t        if (r instanceof Promise) {\n\t            r.then(resolve, reject);\n\t        } else {\n\t            resolve();\n\t        }\n\t    });\n\t};\n\t\n\tvar drawRect = exports.drawRect = function drawRect(ctx, data, style) {\n\t    return new Promise(function (resolve, reject) {\n\t        var _data$debug = data.debug,\n\t            debug = _data$debug === undefined ? true : _data$debug,\n\t            rect = data.rect,\n\t            _data$fillStyle = data.fillStyle,\n\t            fillStyle = _data$fillStyle === undefined ? style.color || style.fillStyle : _data$fillStyle,\n\t            _data$strokeStyle = data.strokeStyle,\n\t            strokeStyle = _data$strokeStyle === undefined ? 'rgba(255, 255, 255, 1)' : _data$strokeStyle,\n\t            _data$lineWidth = data.lineWidth,\n\t            lineWidth = _data$lineWidth === undefined ? 2 : _data$lineWidth,\n\t            _data$shadowBlur = data.shadowBlur,\n\t            shadowBlur = _data$shadowBlur === undefined ? 0 : _data$shadowBlur,\n\t            _data$shadowColor = data.shadowColor,\n\t            shadowColor = _data$shadowColor === undefined ? 'rgba(0,0,0,0.5)' : _data$shadowColor,\n\t            _data$shadowOffsetX = data.shadowOffsetX,\n\t            shadowOffsetX = _data$shadowOffsetX === undefined ? 0 : _data$shadowOffsetX,\n\t            _data$shadowOffsetY = data.shadowOffsetY,\n\t            shadowOffsetY = _data$shadowOffsetY === undefined ? 0 : _data$shadowOffsetY;\n\t\n\t\n\t        var props = {\n\t            fillStyle: fillStyle, strokeStyle: strokeStyle, lineWidth: lineWidth,\n\t            shadowBlur: shadowBlur, shadowColor: shadowColor, shadowOffsetX: shadowOffsetX, shadowOffsetY: shadowOffsetY\n\t        };\n\t\n\t        ctx.save();\n\t\n\t        ctx.beginPath();\n\t        ctx.rect.apply(ctx, _toConsumableArray(rect));\n\t        ctx.closePath();\n\t\n\t        Object.assign(ctx, props);\n\t        (0, _helper.fillAndStroke)(ctx, data, style);\n\t        ctx.restore();\n\t\n\t        debug && (0, _helper.debugLayer)(ctx, data);\n\t\n\t        resolve();\n\t    });\n\t};\n\t\n\tvar drawText = exports.drawText = function drawText(ctx, data, style) {\n\t    return new Promise(function (resolve, reject) {\n\t        var _data$debug2 = data.debug,\n\t            debug = _data$debug2 === undefined ? true : _data$debug2,\n\t            _data$fillStyle2 = data.fillStyle,\n\t            fillStyle = _data$fillStyle2 === undefined ? style.color : _data$fillStyle2,\n\t            _data$strokeStyle2 = data.strokeStyle,\n\t            strokeStyle = _data$strokeStyle2 === undefined ? 'rgba(255, 255, 255, 1)' : _data$strokeStyle2,\n\t            _data$lineWidth2 = data.lineWidth,\n\t            lineWidth = _data$lineWidth2 === undefined ? 2 : _data$lineWidth2,\n\t            _data$textAlign = data.textAlign,\n\t            textAlign = _data$textAlign === undefined ? 'start' : _data$textAlign,\n\t            _data$textBaseline = data.textBaseline,\n\t            textBaseline = _data$textBaseline === undefined ? 'top' : _data$textBaseline,\n\t            _data$fontVariant = data.fontVariant,\n\t            fontVariant = _data$fontVariant === undefined ? 'normal' : _data$fontVariant,\n\t            _data$fontStyle = data.fontStyle,\n\t            fontStyle = _data$fontStyle === undefined ? 'normal' : _data$fontStyle,\n\t            _data$fontWeight = data.fontWeight,\n\t            fontWeight = _data$fontWeight === undefined ? 'normal' : _data$fontWeight,\n\t            _data$fontSize = data.fontSize,\n\t            fontSize = _data$fontSize === undefined ? style.fontSize : _data$fontSize,\n\t            _data$fontFamily = data.fontFamily,\n\t            fontFamily = _data$fontFamily === undefined ? style.fontFamily : _data$fontFamily,\n\t            _data$fontUnit = data.fontUnit,\n\t            fontUnit = _data$fontUnit === undefined ? 'px' : _data$fontUnit;\n\t\n\t\n\t        ctx.save();\n\t\n\t        var font = fontStyle + ' ' + fontVariant + ' ' + fontWeight + ' ' + fontSize + fontUnit + ' ' + fontFamily.replace(/[ ]/g, '\\\\ ');\n\t        var props = { fillStyle: fillStyle, strokeStyle: strokeStyle, textAlign: textAlign, textBaseline: textBaseline, font: font, lineWidth: lineWidth };\n\t        Object.assign(ctx, props);\n\t\n\t        (0, _helper.textFillAndStroke)(ctx, data);\n\t\n\t        ctx.restore();\n\t\n\t        if (debug) {\n\t            (0, _helper.debugLayer)(ctx, data);\n\t        }\n\t\n\t        resolve();\n\t    });\n\t};\n\t\n\tvar drawImage = exports.drawImage = function drawImage(ctx, data) {\n\t    return new Promise(function (resolve, reject) {\n\t        var url = data.url,\n\t            rect = data.rect,\n\t            _data$debug3 = data.debug,\n\t            debug = _data$debug3 === undefined ? true : _data$debug3;\n\t\n\t        var image = new Image();\n\t        image.addEventListener('load', function load(e) {\n\t            this.removeEventListener('load', load);\n\t            var width = this.width,\n\t                height = this.height;\n\t\n\t            var _rect = _slicedToArray(rect, 4),\n\t                x = _rect[0],\n\t                y = _rect[1],\n\t                _rect$ = _rect[2],\n\t                w = _rect$ === undefined ? width : _rect$,\n\t                _rect$2 = _rect[3],\n\t                h = _rect$2 === undefined ? height : _rect$2;\n\t\n\t            ctx.save();\n\t            ctx.drawImage(this, 0, 0, width, height, x, y, w, h);\n\t            ctx.restore();\n\t            if (debug) {\n\t                (0, _helper.debugLayer)(ctx, data);\n\t            }\n\t            resolve();\n\t        });\n\t        image.addEventListener('error', function error(e) {\n\t            this.removeEventListener('error', error);\n\t            if (debug) {\n\t                (0, _helper.debugLayer)(ctx, data);\n\t            }\n\t            resolve(e);\n\t        });\n\t        image.setAttribute('src', url);\n\t    });\n\t};\n\t\n\tvar drawCanvas = exports.drawCanvas = function drawCanvas(canvas, layers) {\n\t    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t    var _config$backgroundCol = config.backgroundColor,\n\t        backgroundColor = _config$backgroundCol === undefined ? '#ffffff' : _config$backgroundCol,\n\t        _config$fontSize = config.fontSize,\n\t        fontSize = _config$fontSize === undefined ? 22 : _config$fontSize,\n\t        _config$fontFamily = config.fontFamily,\n\t        fontFamily = _config$fontFamily === undefined ? 'PingFangSC' : _config$fontFamily,\n\t        _config$color = config.color,\n\t        color = _config$color === undefined ? '#888888' : _config$color;\n\t\n\t\n\t    var ctx = canvas.getContext('2d');\n\t    ctx.fillStyle = backgroundColor;\n\t    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\n\t    return drawContext(ctx, layers, { fontSize: fontSize, fontFamily: fontFamily, color: color });\n\t};\n\t\n\tvar draw = function draw(layers) {\n\t    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    var _config$width = config.width,\n\t        width = _config$width === undefined ? 670 : _config$width,\n\t        _config$height = config.height,\n\t        height = _config$height === undefined ? 760 : _config$height,\n\t        style = _objectWithoutProperties(config, ['width', 'height']);\n\t\n\t    var canvas = document.createElement('canvas');\n\t    canvas.width = width;\n\t    canvas.height = height;\n\t\n\t    return new Promise(function (resolve, reject) {\n\t        drawCanvas(canvas, layers, style).then(function () {\n\t            resolve(canvas.toDataURL('image/png'));\n\t        }, reject);\n\t    });\n\t};\n\texports.draw = draw;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tvar fillAndStroke = exports.fillAndStroke = function fillAndStroke(ctx, config, style) {\n\t    var _config$fill = config.fill,\n\t        fill = _config$fill === undefined ? true : _config$fill,\n\t        _config$stroke = config.stroke,\n\t        stroke = _config$stroke === undefined ? false : _config$stroke,\n\t        _config$strokeAhead = config.strokeAhead,\n\t        strokeAhead = _config$strokeAhead === undefined ? false : _config$strokeAhead;\n\t\n\t\n\t    if (strokeAhead) {\n\t        fill && ctx.fill();\n\t        stroke && ctx.stroke();\n\t    } else {\n\t        stroke && ctx.stroke();\n\t        fill && ctx.fill();\n\t    }\n\t};\n\t\n\tvar splitText = exports.splitText = function splitText(ctx, text, width) {\n\t    var newlineManual = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\t\n\t    if (newlineManual) {\n\t        return text.split(/[\\r\\n]+/);\n\t    } else {\n\t        var lines = [];\n\t        var texts = text.split('');\n\t        var line = [];\n\t        do {\n\t            while (texts.length > 0) {\n\t                line.push(texts.shift());\n\t                if (ctx.measureText(line.join('')).width > width) {\n\t                    texts.unshift(line.pop());\n\t                    break;\n\t                }\n\t            }\n\t            lines.push(line.join(''));\n\t            line = [];\n\t        } while (texts.length > 0);\n\t        return lines;\n\t    }\n\t};\n\t\n\tvar textFillAndStroke = exports.textFillAndStroke = function textFillAndStroke(ctx, config) {\n\t    var rect = config.rect,\n\t        _config$fill2 = config.fill,\n\t        fill = _config$fill2 === undefined ? true : _config$fill2,\n\t        _config$stroke2 = config.stroke,\n\t        stroke = _config$stroke2 === undefined ? false : _config$stroke2,\n\t        _config$strokeAhead2 = config.strokeAhead,\n\t        strokeAhead = _config$strokeAhead2 === undefined ? false : _config$strokeAhead2,\n\t        _config$text = config.text,\n\t        text = _config$text === undefined ? '<No text>' : _config$text,\n\t        _config$multiLine = config.multiLine,\n\t        multiLine = _config$multiLine === undefined ? false : _config$multiLine,\n\t        _config$newlineManual = config.newlineManual,\n\t        newlineManual = _config$newlineManual === undefined ? false : _config$newlineManual;\n\t\n\t    var _rect = _slicedToArray(rect, 4),\n\t        left = _rect[0],\n\t        top = _rect[1],\n\t        width = _rect[2],\n\t        height = _rect[3];\n\t\n\t    var w = ctx.measureText(text).width;\n\t    if (width > 0 && width < w && multiLine) {\n\t        var lines = splitText(ctx, text, width, newlineManual);\n\t        lines.forEach(function (text, index) {\n\t            if (strokeAhead) {\n\t                fill && ctx.fillText(text, left, top + index * height);\n\t                stroke && ctx.strokeText(text, left, top + index * height);\n\t            } else {\n\t                stroke && ctx.strokeText(text, left, top + index * height);\n\t                fill && ctx.fillText(text, left, top + index * height);\n\t            }\n\t        });\n\t        rect[3] = height * lines.length;\n\t    } else {\n\t        if (strokeAhead) {\n\t            fill && ctx.fillText(text, left, top);\n\t            stroke && ctx.strokeText(text, left, top);\n\t        } else {\n\t            stroke && ctx.strokeText(text, left, top);\n\t            fill && ctx.fillText(text, left, top);\n\t        }\n\t        rect[2] = ctx.measureText(text).width;\n\t    }\n\t};\n\t\n\tvar debugLayer = exports.debugLayer = function debugLayer(ctx, config) {\n\t    var _config$rect = config.rect,\n\t        rect = _config$rect === undefined ? [] : _config$rect;\n\t\n\t    ctx.save();\n\t    ctx.strokeStyle = '#000';\n\t    ctx.beginPath();\n\t    ctx.rect.apply(ctx, _toConsumableArray(rect));\n\t    ctx.closePath();\n\t    ctx.stroke();\n\t};\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6f116602ec864dd3c799","import {\n    fillAndStroke,\n    textFillAndStroke,\n    debugLayer,\n} from './helper';\n\nexport const drawContext = (ctx, layers, style) => new Promise((resolve, reject) => {\n    if(layers.length < 1){\n        resolve();\n        return;\n    }\n    layers = [...layers];\n    const layer = layers.shift(), promise = null;\n    if(Array.isArray(layer)){\n        drawContext(ctx, layer, style).then(() => {\n            drawContext(ctx, layers, style).then(resolve, reject);\n        }, reject);\n    } else {\n        switch(layer.type){\n            case 'text':\n                drawText(ctx, layer, style).then(() => {\n                    drawContext(ctx, layers, style).then(resolve, reject);\n                }, reject)\n                break;\n            case 'image':\n                drawImage(ctx, layer, style).then(() => {\n                    drawContext(ctx, layers, style).then(resolve, reject);\n                }, reject)\n                break;\n            case 'rect':\n                drawRect(ctx, layer, style).then(() => {\n                    drawContext(ctx, layers, style).then(resolve, reject);\n                }, reject)\n                break;\n            case 'action':\n                runAction(ctx, layer, style).then(() => {\n                    drawContext(ctx, layers, style).then(resolve, reject);\n                }, reject)\n                break;\n            default:\n                reject(new Error('Not support layer-type: ' + layer.type));\n                break;\n        }\n    }\n});\n\nexport const runAction = (ctx, layer) => new Promise((resolve, reject) => {\n    const { action } = layer;\n    const r = action(ctx);\n    if(r instanceof Promise){\n        r.then(resolve, reject);\n    } else {\n        resolve();\n    }\n})\n\nexport const drawRect = (ctx, data, style) => new Promise((resolve, reject) => {\n    const {\n        debug = true,\n        rect,\n        fillStyle = style.color || style.fillStyle, //'rgba(0, 0, 0, 1)',\n        strokeStyle = 'rgba(255, 255, 255, 1)',\n        lineWidth = 2,\n        shadowBlur = 0,\n        shadowColor = 'rgba(0,0,0,0.5)',\n        shadowOffsetX = 0,\n        shadowOffsetY = 0,\n    } = data;\n\n    const props = {\n        fillStyle, strokeStyle, lineWidth,\n        shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY\n    };\n\n    ctx.save();\n\n    ctx.beginPath();\n    ctx.rect(...rect);\n    ctx.closePath();\n\n    Object.assign(ctx, props);\n    fillAndStroke(ctx, data, style);\n    ctx.restore();\n\n    debug && debugLayer(ctx, data);\n\n    resolve();\n});\n\nexport const drawText = (ctx, data, style) => new Promise((resolve, reject) => {\n    const {\n        debug = true,\n        fillStyle = style.color, //'rgba(0, 0, 0, 1)',\n        strokeStyle = 'rgba(255, 255, 255, 1)',\n        lineWidth = 2,\n        textAlign = 'start',    // start end center left right\n        textBaseline = 'top',    // alphabetic top hanging middle ideographic bottom\n        fontVariant\t= 'normal', // normal small-caps\n        fontStyle = 'normal',   // normal italic oblique\n        fontWeight = 'normal',  // normal lighter bold bolder 100~900\n        fontSize = style.fontSize, //16,\n        fontFamily = style.fontFamily, //'Arial',\n        fontUnit = 'px',\n    } = data;\n\n    \n    ctx.save();\n\n    const font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize}${fontUnit} ${fontFamily.replace(/[ ]/g, '\\\\ ')}`;\n    const props = { fillStyle, strokeStyle, textAlign, textBaseline, font, lineWidth };\n    Object.assign(ctx, props);\n\n    textFillAndStroke(ctx, data);\n\n    ctx.restore();\n\n    if(debug){\n        debugLayer(ctx, data);\n    }\n\n    resolve();\n    \n});\n\nexport const drawImage = (ctx, data) => new Promise((resolve, reject) => {\n    const { url, rect, debug = true } = data;\n    const image = new Image();\n    image.addEventListener('load', function load(e){\n        this.removeEventListener('load', load);\n        const { width, height } = this;\n        const [x, y, w = width, h = height] = rect;\n        ctx.save();\n        ctx.drawImage(this\n            , 0, 0, width, height\n            , x, y, w, h\n            );\n        ctx.restore();\n        if(debug){\n            debugLayer(ctx, data);\n        }\n        resolve();\n    });\n    image.addEventListener('error', function error(e){\n        this.removeEventListener('error', error);\n        if(debug){\n            debugLayer(ctx, data);\n        }\n        resolve(e);\n    });\n    image.setAttribute('src', url);\n})\n\nexport const drawCanvas = (canvas, layers, config = {}) => {\n    const {\n        backgroundColor = '#ffffff',\n        fontSize = 22,\n        fontFamily = 'PingFangSC',\n        color = '#888888',\n    } = config;\n\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    return drawContext(ctx, layers, { fontSize, fontFamily, color });\n};\n\nexport const draw = (layers, config = {}) => {\n    const {\n        width = 670, height = 760,\n        ...style\n    } = config;\n\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n\n    return new Promise((resolve, reject) => {\n        drawCanvas(canvas, layers, style).then(() => {\n            resolve(canvas.toDataURL('image/png'))\n        }, reject)\n    })\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/v2c/index.js","export const fillAndStroke = (ctx, config, style) => {\n    const {\n        fill = true,\n        stroke = false,\n        strokeAhead = false,\n    } = config;\n\n    if(strokeAhead){\n        fill && ctx.fill();\n        stroke && ctx.stroke();\n    } else {\n        stroke && ctx.stroke();\n        fill && ctx.fill();\n    }\n};\n\nexport const splitText = (ctx, text, width, newlineManual = false) => {\n    if(newlineManual){\n        return text.split(/[\\r\\n]+/);\n    } else {\n        const lines = [];\n        const texts = text.split('');\n        let line = [];\n        do {\n            while(texts.length > 0){\n                line.push(texts.shift());\n                if(ctx.measureText(line.join('')).width > width){\n                    texts.unshift(line.pop());\n                    break;\n                }\n            }\n            lines.push(line.join(''));\n            line = [];\n        } while(texts.length > 0);\n        return lines;\n    }\n};\n\nexport const textFillAndStroke = (ctx, config) => {\n    const {\n        rect,\n        fill = true,\n        stroke = false,\n        strokeAhead = false,\n        text = '<No text>',\n        multiLine = false,\n        newlineManual = false,\n    } = config;\n\n    const [left, top, width, height] = rect;\n\n    let w = ctx.measureText(text).width;\n    if(width > 0 && width < w && multiLine){\n        const lines = splitText(ctx, text, width, newlineManual);\n        lines.forEach((text, index) => {\n            if(strokeAhead){\n                fill && ctx.fillText(text, left, top + index * height);\n                stroke && ctx.strokeText(text, left, top + index * height);\n            } else {\n                stroke && ctx.strokeText(text, left, top + index * height);\n                fill && ctx.fillText(text, left, top + index * height);\n            }\n        })\n        rect[3] = height * lines.length;\n    } else {\n        if(strokeAhead){\n            fill && ctx.fillText(text, left, top);\n            stroke && ctx.strokeText(text, left, top);\n        } else {\n            stroke && ctx.strokeText(text, left, top);\n            fill && ctx.fillText(text, left, top);\n        }\n        rect[2] = ctx.measureText(text).width;\n    }\n};\n\nexport const debugLayer = (ctx, config) => {\n    const { rect = [] } = config;\n    ctx.save();\n    ctx.strokeStyle = '#000';\n    ctx.beginPath();\n    ctx.rect(...rect);\n    ctx.closePath();\n    ctx.stroke();\n}\n\n\n// WEBPACK FOOTER //\n// ./src/v2c/helper.js"],"sourceRoot":""}